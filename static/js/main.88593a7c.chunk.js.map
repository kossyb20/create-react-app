{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","xIsNext","stepNumber","slice","length","calculateWinner","setState","concat","step","status","current","winner","moves","map","move","desc","key","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"sLAME,SAASA,EAAOC,GACd,OACA,4BAAQC,UAAU,SAASC,QAASF,EAAME,SACrCF,EAAMG,O,IAMPC,E,qLAmBSC,GAAI,IAAD,OACd,OACE,kBAACN,EAAD,CAAQI,MAAOG,KAAKN,MAAMO,QAAQF,GAClCH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,Q,+BAepC,OACE,6BACE,yBAAKJ,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAErB,yBAAKP,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAErB,yBAAKP,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,S,GApDTC,IAAMC,WA2DpBC,E,YAEJ,WAAYX,GAAO,IAAD,8BACd,4CAAMA,KACDY,MAAQ,CACTC,QAAS,CAAC,CACNN,QAASO,MAAM,GAAGC,KAAK,QAE3BC,SAAS,EACTC,WAAY,GAPF,E,yEAWNZ,GACR,IAAMQ,EAAUP,KAAKM,MAAMC,QAAQK,MAAM,EAAGZ,KAAKM,MAAMK,WAAa,GAE9DV,EADUM,EAAQA,EAAQM,OAAS,GACjBZ,QAAQW,QAC5BE,EAAgBb,IAAYA,EAAQF,KAGxCE,EAAQF,GAAKC,KAAKM,MAAMI,QAAU,IAAM,IACxCV,KAAKe,SAAS,CACVR,QAASA,EAAQS,OAAO,CAAC,CACrBf,QAASA,KAEbU,WAAYJ,EAAQM,OACpBH,SAAUV,KAAKM,MAAMI,a,6BAItBO,GACHjB,KAAKe,SAAS,CACVJ,WAAYM,EACZP,QAAUO,EAAO,IAAO,M,+BAGtB,IAgBJC,EAhBG,OACDX,EAAUP,KAAKM,MAAMC,QACrBY,EAAUZ,EAAQP,KAAKM,MAAMK,YAC7BS,EAASN,EAAgBK,EAAQlB,SAEjCoB,EAAQd,EAAQe,KAAI,SAACL,EAAMM,GAC7B,IAAMC,EAAOD,EACb,eAAiBA,EACjB,mBACA,OACI,wBAAIE,IAAKF,GACL,4BAAQ3B,QAAS,kBAAM,EAAK8B,OAAOH,KAAQC,OAWvD,OAJIN,EADAE,EACS,WAAaA,EAEb,iBAAmBpB,KAAKM,MAAMI,QAAU,IAAM,KAGzD,yBAAKf,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACG,EAAD,CACIG,QAASkB,EAAQlB,QACjBL,QAAS,SAACG,GAAD,OAAO,EAAK4B,YAAY5B,OAEvC,yBAAKJ,UAAU,aACb,6BAAMuB,GACN,4BAAKG,S,GAnEIlB,IAAMC,WAkF3B,SAASU,EAAgBb,GAWrB,IAVA,IAAM2B,EAAQ,CACV,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,IAEA7B,EAAI,EAAGA,EAAG6B,EAAMf,OAAQd,IAAI,CAAC,IAAD,cACjB6B,EAAM7B,GADW,GAC1B8B,EAD0B,KACxBC,EADwB,KACtBC,EADsB,KAEjC,GAAI9B,EAAQ4B,IAAM5B,EAAQ4B,KAAO5B,EAAQ6B,IAAM7B,EAAQ4B,KAAO5B,EAAQ8B,GAClE,OAAO9B,EAAQ4B,GAGvB,OAAO,KAvBTG,IAASC,OACP,kBAAC5B,EAAD,MACA6B,SAASC,eAAe,U","file":"static/js/main.88593a7c.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n\r\n\r\n  function Square(props) {\r\n    return (\r\n    <button className=\"square\" onClick={props.onClick}>\r\n        {props.value}\r\n    </button>\r\n    );\r\n  }\r\n  \r\n  \r\n  class Board extends React.Component {\r\n\r\n    // constructor(props){\r\n    //     super(props);\r\n    //     this.state = {\r\n    //         squares: Array(9).fill(null),\r\n    //         xIsNext: true,\r\n    //     };\r\n    // }\r\n\r\n    // handleClick(i){\r\n    //     const squares = this.state.squares.slice();\r\n    //     if (calculateWinner(squares) || squares[i]){\r\n    //         return;\r\n    //     }\r\n    //     squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n    //     this.setState({squares: squares,\r\n    //     xIsNext: !this.state.xIsNext});\r\n    // }\r\n    renderSquare(i) {\r\n      return (\r\n        <Square value={this.props.squares[i]} \r\n        onClick={() => this.props.onClick(i)}/>\r\n      );\r\n    }\r\n  \r\n    render() {\r\n    //   const winner = calculateWinner(this.state.squares);\r\n    //   let status;\r\n    //   if (winner){\r\n    //       status = 'Winner: ' + winner;\r\n    //   }else {\r\n    //     status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n    //   }\r\n\r\n      //const status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n  \r\n      return (\r\n        <div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(0)}\r\n            {this.renderSquare(1)}\r\n            {this.renderSquare(2)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(3)}\r\n            {this.renderSquare(4)}\r\n            {this.renderSquare(5)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(6)}\r\n            {this.renderSquare(7)}\r\n            {this.renderSquare(8)}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  class Game extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            history: [{\r\n                squares: Array(9).fill(null),\r\n            }],\r\n            xIsNext: true,\r\n            stepNumber: 0,\r\n        };\r\n    }\r\n\r\n    handleClick(i){\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        if (calculateWinner(squares) || squares[i]){\r\n            return;\r\n        }\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({\r\n            history: history.concat([{\r\n                squares: squares,\r\n            }]),\r\n            stepNumber: history.length,\r\n            xIsNext: !this.state.xIsNext,\r\n        });\r\n    }\r\n\r\n    jumpTo(step){\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext: (step % 2) === 0,\r\n        });\r\n    }\r\n    render() {\r\n      const history = this.state.history;\r\n      const current = history[this.state.stepNumber];\r\n      const winner = calculateWinner(current.squares);\r\n\r\n      const moves = history.map((step, move) => {\r\n          const desc = move ? \r\n          'Go to move #' + move :\r\n          'Go to game start';\r\n          return(\r\n              <li key={move}>\r\n                  <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n              </li>\r\n          );\r\n      });\r\n\r\n      let status;\r\n      if (winner) {\r\n          status = 'Winner: ' + winner;\r\n      } else {\r\n          status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O')\r\n      }\r\n      return (\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Board\r\n                squares={current.squares}\r\n                onClick={(i) => this.handleClick(i)}/>\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <div>{status}</div>\r\n            <ol>{moves}</ol>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  // ========================================\r\n  \r\n  ReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n  );\r\n  \r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0,1,2],\r\n        [3,4,5],\r\n        [6,7,8],\r\n        [0,3,6],\r\n        [1,4,7],\r\n        [2,5,8],\r\n        [0,4,8],\r\n        [2,4,6],\r\n    ];\r\n    for (let i = 0; i< lines.length; i++){\r\n        const [a,b,c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]){\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}"],"sourceRoot":""}